name: Validate terraform fmt
on:
  pull_request:
    branches:
      - main
      - master
permissions:
  id-token: write
  contents: read
jobs:
  validate:
    runs-on: ubuntu-latest
    name: terraform fmt check
    outputs:
      CHECK_STATUS: "${{ env.CHECK_STATUS }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4
      - name: Terraform Init
        id: init
        run:  terraform init --upgrade
      - name: Terraform Format Check
        id: fmt
        run: |
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep '\.tf$' | while read file; do
            echo "Checking terraform fmt on ${file}..."
            if [ -f "$file" ] && ! terraform fmt -check "$file"; then
              echo "::error::❌ Terraform formatting failed for ${file}"
              exit 1
            fi
          done
      - name: Terraform validate check
        id: validate
        working-directory: ./infrastructure
        run: |
          if ! terraform validate; then
            echo "::error::❌ Terraform validate failed"
            exit 1
          fi
      - name: Tflint setup
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0
      - name: Show version
        run: tflint --version
      - name: Init tflint
        working-directory: ./infrastructure
        run: tflint --init
      - name: Run TFLint
        run: |
          if ! tflint -f compact; then
            echo "::error::❌ Tflint failed"
            exit 1
          fi